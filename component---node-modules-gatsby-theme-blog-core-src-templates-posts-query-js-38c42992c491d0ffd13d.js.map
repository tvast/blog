{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-blog/src/components/home-footer.js","webpack:///./node_modules/gatsby-theme-blog/src/components/posts.js","webpack:///./node_modules/gatsby-theme-blog-core/src/templates/posts-query.js","webpack:///./node_modules/gatsby-theme-blog/src/gatsby-theme-blog-core/components/posts.js"],"names":["Footer","socialLinks","css","mt","pt","Date","getFullYear","href","map","platform","i","arr","key","url","a","target","rel","name","length","Posts","location","posts","siteTitle","title","node","slug","keywords","h2","mb","as","Link","textDecoration","to","date","p","excerpt","PostsPage","data","site","allBlogPost","edges","siteMetadata","social","query"],"mappings":"6JA4BeA,G,MAzBA,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAH,OACb,sBACEC,IAAKA,YAAI,CACPC,GAAI,EACJC,GAAI,KAHR,MAMK,IAAIC,MAAOC,cANhB,mBAQE,iBAAGC,KAAK,4BAAR,UARF,YAUGN,EAAYO,KAAI,SAACC,EAAUC,EAAGC,GAAd,OACf,YAAC,WAAD,CAAUC,IAAKH,EAASI,KACtB,YAAC,IAAOC,EAAR,CAAUP,KAAME,EAASI,IAAKE,OAAO,SAASC,IAAI,uBAC/CP,EAASQ,MAEXN,EAAIO,OAAS,IAAMR,GAClB,YAAC,WAAD,yBCwBKS,EApCD,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,UAAWrB,EAA/B,EAA+BA,YAA/B,OACZ,YAAC,IAAD,CAAQmB,SAAUA,EAAUG,MAAOD,GACjC,wBACGD,EAAMb,KAAI,YAAe,IAAZgB,EAAW,EAAXA,KACND,EAAQC,EAAKD,OAASC,EAAKC,KAC3BC,EAAWF,EAAKE,UAAY,GAClC,OACE,YAAC,WAAD,CAAUd,IAAKY,EAAKC,MAClB,YAAC,IAAD,CAAKF,MAAM,OAAOG,SAAUA,IAC5B,uBACE,YAAC,IAAOC,GAAR,CACEzB,IAAKA,YAAI,CACP0B,GAAI,KAGN,YAAC,IAAOd,EAAR,CACEe,GAAIC,IACJ5B,IAAG,YAAE,CACH6B,eAAe,SAEjBC,GAAIR,EAAKC,MAERF,IAGL,yBAAQC,EAAKS,MACb,YAAC,IAAOC,EAAR,KAAWV,EAAKW,eAM1B,YAAC,EAAD,CAAQlC,YAAaA,MCvCzB,sCAEemC,UCAA,YAAyB,IAAtBhB,EAAqB,EAArBA,SAAUiB,EAAW,EAAXA,KAClBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,YACd,OACE,YAAC,EAAD,CACEnB,SAAUA,EACVC,MAAOkB,EAAYC,MACnBlB,UAAWgB,EAAKG,aAAalB,MAC7BtB,YAAaqC,EAAKG,aAAaC,UDPtBN,IAEFO,EAAK","file":"component---node-modules-gatsby-theme-blog-core-src-templates-posts-query-js-38c42992c491d0ffd13d.js","sourcesContent":["import React, { Fragment } from \"react\"\nimport { Styled, css } from \"theme-ui\"\n\nconst Footer = ({ socialLinks }) => (\n  <footer\n    css={css({\n      mt: 4,\n      pt: 3,\n    })}\n  >\n    Â© {new Date().getFullYear()}, Powered by\n    {` `}\n    <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n    {` `}&bull;{` `}\n    {socialLinks.map((platform, i, arr) => (\n      <Fragment key={platform.url}>\n        <Styled.a href={platform.url} target=\"_blank\" rel=\"noopener noreferrer\">\n          {platform.name}\n        </Styled.a>\n        {arr.length - 1 !== i && (\n          <Fragment>\n            {` `}&bull;{` `}\n          </Fragment>\n        )}\n      </Fragment>\n    ))}\n  </footer>\n)\nexport default Footer\n","import React, { Fragment } from \"react\"\nimport { Link } from \"gatsby\"\nimport { Styled, css } from \"theme-ui\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Footer from \"../components/home-footer\"\n\nconst Posts = ({ location, posts, siteTitle, socialLinks }) => (\n  <Layout location={location} title={siteTitle}>\n    <main>\n      {posts.map(({ node }) => {\n        const title = node.title || node.slug\n        const keywords = node.keywords || []\n        return (\n          <Fragment key={node.slug}>\n            <SEO title=\"Home\" keywords={keywords} />\n            <div>\n              <Styled.h2\n                css={css({\n                  mb: 1,\n                })}\n              >\n                <Styled.a\n                  as={Link}\n                  css={{\n                    textDecoration: `none`,\n                  }}\n                  to={node.slug}\n                >\n                  {title}\n                </Styled.a>\n              </Styled.h2>\n              <small>{node.date}</small>\n              <Styled.p>{node.excerpt}</Styled.p>\n            </div>\n          </Fragment>\n        )\n      })}\n    </main>\n    <Footer socialLinks={socialLinks} />\n  </Layout>\n)\n\nexport default Posts\n","import { graphql } from \"gatsby\"\nimport PostsPage from \"../components/posts\"\n\nexport default PostsPage\n\nexport const query = graphql`\n  query PostsQuery {\n    site {\n      siteMetadata {\n        title\n        social {\n          name\n          url\n        }\n      }\n    }\n    allBlogPost(sort: { fields: [date, title], order: DESC }, limit: 1000) {\n      edges {\n        node {\n          id\n          excerpt\n          slug\n          title\n          date(formatString: \"MMMM DD, YYYY\")\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Posts from \"../../components/posts\"\n\nexport default ({ location, data }) => {\n  const { site, allBlogPost } = data\n  return (\n    <Posts\n      location={location}\n      posts={allBlogPost.edges}\n      siteTitle={site.siteMetadata.title}\n      socialLinks={site.siteMetadata.social}\n    />\n  )\n}\n"],"sourceRoot":""}