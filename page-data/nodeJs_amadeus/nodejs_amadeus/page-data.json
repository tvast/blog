{"componentChunkName":"component---node-modules-gatsby-theme-blog-core-src-templates-post-query-js","path":"/nodeJs_amadeus/nodejs_amadeus/","webpackCompilationHash":"78bd496c9f36dc89eae2","result":{"data":{"site":{"siteMetadata":{"title":"A developer journey","social":[{"name":"twitter","url":"https://twitter.com/theophile_vast"},{"name":"github","url":"https://github.com/tvast"}]}},"blogPost":{"__typename":"MdxBlogPost","id":"5b3438d4-0078-5641-ac32-6723f542588d","excerpt":"Hello developers! Today we’re going to learn how to build a back end for a flight booking app with Node.js using Amadeus Quick-Connect, a…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Node JS app for amadeus API\",\n  \"date\": \"2020-01-07T00:00:00.000Z\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Hello developers! Today we\\u2019re going to learn how to build a back end for a flight booking app with Node.js using Amadeus Quick-Connect, a flight booking bundle featuring Flight Offers Search, Flight Offers Price and Flight Create Orders, all available in our Self-Service catalog. We will also implemented a service using airport city search. LEt\\u2019s start coding !\"), mdx(\"h2\", {\n    \"id\": \"set-up-a-simple-nodejs-server\"\n  }, \"Set up a simple Node.js server\"), mdx(\"p\", null, \"FIrst thing first we need a simple Node js server to get it running \"), mdx(\"p\", null, \"server.js\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"var express = require('express')\\n\\nconst bodyParser = require('body-parser');\\n\\n app = express(),\\n port = process.env.PORT || 3000;\\n\\napp.listen(port);\\n// console.log(tree)\\nconsole.log('Amadeus RESTful API server started on: ' + port);\\n\")), mdx(\"p\", null, \"This code is an instance of an express server. Who listen on the port 3000. Here is the package json to install the depedencies \"), mdx(\"p\", null, \"package.json\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"{\\n  \\\"name\\\": \\\"AmadeusSelfserviceApi\\\",\\n  \\\"version\\\": \\\"1.0.0\\\",\\n  \\\"description\\\": \\\"parse folder of ventyas to generate jSon\\\",\\n  \\\"main\\\": \\\"server.js\\\",\\n  \\\"scripts\\\": {\\n    \\\"start\\\": \\\"nodemon server.js\\\",\\n    \\\"test\\\": \\\"echo \\\\\\\"Error: no test specified\\\\\\\" && exit 1\\\"\\n  },\\n  \\\"author\\\": \\\"theophile vast\\\",\\n  \\\"license\\\": \\\"ISC\\\",\\n  \\\"devDependencies\\\": {\\n    \\\"express\\\": \\\"^4.17.1\\\",\\n    \\\"nodemon\\\": \\\"^1.19.4\\\"\\n  },\\n  \\\"dependencies\\\": {\\n    \\\"express\\\": \\\"^4.17.1\\\",\\n    \\\"nodemon\\\": \\\"^1.19.4\\\",\\n    \\\"amadeus\\\": \\\"^3.2.0\\\",\\n    \\\"node-fetch\\\": \\\"^2.6.0\\\",\\n    \\\"node-static\\\": \\\"^0.7.11\\\",\\n    \\\"request\\\": \\\"^2.88.0\\\",\\n  }\\n}\\n\")), mdx(\"p\", null, \"just do \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"npm i \\n\")), mdx(\"p\", null, \"to install it\"), mdx(\"h2\", {\n    \"id\": \"get-an-api-token\"\n  }, \"Get an API token\"), mdx(\"p\", null, \"THe amadeus self service API authentication is documented here. In other words you just need to get a token from the authentification endpoint and then you will pass it to the header of your futur request. Here is the code to perform it :\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"let headers= {  \\n  'Content-Type': 'application/x-www-form-urlencoded',\\n};\\n\\nlet body = {\\n \\\"grant_type\\\": \\\"client_credentials\\\",\\n \\\"client_id\\\": YOUR_CLIENT_ID,\\n \\\"client_secret\\\": YOUR_CLIENT_SECRET,\\n\\n}\\n//airport city search\\nconst uriAuth =\\\"https://test.api.amadeus.com/v1/security/oauth2/token\\\" \\n\\n//init token\\nlet token=\\\"\\\";\\n  fetch(uriAuth, { method: 'POST', \\n    headers: headers, \\n    body: 'grant_type=client_credentials&client_id=' + body.client_id + '&client_secret=' + body.client_secret\\n  })\\n   .then((res) => {\\n     return res.json()\\n   })\\n   .then((json) => {\\n    console.log(json);\\n    token=json.access_token;\\n    console.log(token);\\n\\n  });\\n\")), mdx(\"p\", null, \"It\\u2019s simple : you make a request to the authentification endpoint and you svae the answer in a variable to pass it to the header of your futur request.\"), mdx(\"p\", null, \"We can build a function that will be call every time we made a request to the back end to keep the token fresh :\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"async function postUrlToken() {\\n  // Default options are marked with *\\n  const response = await fetch(uriAuth, {\\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\\n    mode: 'cors', // no-cors, *cors, same-origin\\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\\n    credentials: 'same-origin', // include, *same-origin, omit\\n    headers: {\\n      // 'Content-Type': 'application/json'   \\n      'Content-Type': 'application/x-www-form-urlencoded',\\n     },\\n    redirect: 'follow', // manual, *follow, error\\n    referrerPolicy: 'no-referrer', // no-referrer, *client\\n    body: 'grant_type=client_credentials&client_id=' + body.client_id + '&client_secret=' + body.client_secret// body data type must match \\\"Content-Type\\\" header\\n  });\\n  return await response.json(); // parses JSON response into native JavaScript objects\\n}\\n\\n\")), mdx(\"p\", null, \"Just call postUrlToken() whenever you need to made a call to a service\"), mdx(\"h2\", {\n    \"id\": \"creating-a-post-request-to-get-a-list-of-flight-deals\"\n  }, \"Creating a post request to get a list of flight deals\"), mdx(\"p\", null, \"Here we will use our token freshly generated to pass it to the header of our request. We pass also the dynamic value of departure for the date of departure, locationDeparture for location of departure. We build the request on the back end for some security reason and best practices.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"async function updateFlightSearch(departure, arrival, locationArrival,locationDeparture) {\\n\\n    let request = {\\n      \\\"currencyCode\\\": \\\"USD\\\",\\n      \\\"originDestinations\\\": [\\n      {\\n        \\\"id\\\": \\\"1\\\",\\n        \\\"originLocationCode\\\": locationDeparture,\\n        \\\"destinationLocationCode\\\": locationArrival,\\n        \\\"departureDateTimeRange\\\": {\\n          \\\"date\\\": departure,\\n          \\\"time\\\": \\\"10:00:00\\\"\\n        }\\n      },\\n      ],\\n      \\\"travelers\\\": [\\n      {\\n        \\\"id\\\": \\\"1\\\",\\n        \\\"travelerType\\\": \\\"ADULT\\\",\\n        \\\"fareOptions\\\": [\\n        \\\"STANDARD\\\"\\n        ]\\n      },\\n      ],\\n      \\\"sources\\\": [\\n      \\\"GDS\\\"\\n      ],\\n      \\\"searchCriteria\\\": {\\n        \\\"maxFlightOffers\\\": 50,\\n        \\\"flightFilters\\\": {\\n          \\\"cabinRestrictions\\\": [\\n          {\\n            \\\"cabin\\\": \\\"BUSINESS\\\",\\n            \\\"coverage\\\": \\\"MOST_SEGMENTS\\\",\\n            \\\"originDestinationIds\\\": [\\n            \\\"1\\\"\\n            ]\\n          }\\n          ],\\n        }\\n      }\\n    }\\n  // Default options are marked with *\\n  const response = await fetch(\\\"https://test.api.amadeus.com/v2/shopping/flight-offers\\\", {\\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\\n    mode: 'cors', // no-cors, *cors, same-origin\\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\\n    credentials: 'same-origin', // include, *same-origin, omit\\n    headers: {\\n      'Content-Type': 'application/json',authorization: 'Bearer '+token\\n      // 'Content-Type': 'application/x-www-form-urlencoded',\\n    },\\n    redirect: 'follow', // manual, *follow, error\\n    referrerPolicy: 'no-referrer', // no-referrer, *client\\n    body: JSON.stringify(request) // body data type must match \\\"Content-Type\\\" header\\n  });\\n  return await response.json(); // parses JSON response into native JavaScript objects\\n}\\n\")), mdx(\"p\", null, \"Then we call this function while we received the input from postman or your front-end : \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"//get flight offer\\napp.post('/date', function(req, res) {\\n  departure = req.body.departure;\\n  arrival = req.body.arrival;\\n  locationDeparture = req.body.locationDeparture;\\n  locationArrival =req.body.locationArrival;\\n  //   postUrlToken().then((data) => {\\n  //     console.log(data);\\n  //     // token=data.access_token;\\n  //     // this.info3=data // JSON data parsed by `response.json()` call\\n  //   }).catch(function(error) {\\n  //   console.error(error);\\n  // });\\n  updateFlightSearch(departure, arrival, locationArrival,locationDeparture).then((data) => {\\n    console.log(data);\\n    flightfrommadrid2=data\\n    res.send(JSON.stringify(flightfrommadrid2)); // JSON data parsed by `response.json()` call\\n  }).catch(function(error) {\\n  console.error(error);\\n});\\n  }); \\n\")), mdx(\"p\", null, \"And we serve our result to a route where we can catch the result from postman or your front end :\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"app.get('/flightSearch', function(req, res) {\\n  res.send(JSON.stringify(flightfrommadrid2));\\n  console.log(flightfrommadrid2)\\n});\\n\")), mdx(\"h2\", {\n    \"id\": \"calling-flight-offers-price-to-confirm-the-final-price\"\n  }, \"Calling Flight Offers Price to confirm the final price\"), mdx(\"p\", null, \"TO perfom a booking the process need to confirm the price before send it to create order endpoint. FOr that we select an item of the repsonse from flight offer search and we pass it to an other request.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"async function flifghtPrice(inputFlightOffer) {\\n  // Default options are marked with *\\n  const response = await fetch(\\\"https://test.api.amadeus.com/v2/shopping/flight-offers/pricing\\\", {\\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\\n    mode: 'cors', // no-cors, *cors, same-origin\\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\\n    credentials: 'same-origin', // include, *same-origin, omit\\n    headers: {\\n      'Content-Type': 'application/json',authorization: 'Bearer '+token\\n      // 'Content-Type': 'application/x-www-form-urlencoded',\\n    },\\n    redirect: 'follow', // manual, *follow, error\\n    referrerPolicy: 'no-referrer', // no-referrer, *client\\n    body: JSON.stringify(inputFlightOffer) // body data type must match \\\"Content-Type\\\" header\\n  });\\n  console.log(inputFlightOffer)\\n  return await response.json(); // parses JSON response into native JavaScript objects\\n}\\n\")), mdx(\"p\", null, \"Where inputFlightOffer is your request object, it should be like this :\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"var inputFlightOffer=   {\\n    \\\"data\\\": {\\n        \\\"type\\\": \\\"flight-offers-pricing\\\",\\n        \\\"flightOffers\\\": [YOUR_SELECTED_FLIGHT_OFFER]\\n  }};\\n\")), mdx(\"p\", null, \"Then you will received your flight offer confirmation and you can pass it to the next step\"), mdx(\"h2\", {\n    \"id\": \"calling-flight-orders-create-to-complete-the-final-booking\"\n  }, \"Calling Flight Orders Create to complete the final booking\"), mdx(\"p\", null, \"Now we have selected a flight offer, confirm the price it\\u2019s time to book our ticket. We can do it in the next process> We comnstruct a request qith the flight offer selected and some data about the passenger. Name lastname mail will be enought for the demonstration. HEre is the request :\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"var requestCreateOrder={\\n  \\\"data\\\": {\\n    \\\"type\\\": \\\"flight-order\\\",\\n    \\\"flightOffers\\\": [YOUR_FLIGHT_OFFER_PRICING_RESPONSE],\\n    \\\"travelers\\\": [\\n      {\\n        \\\"id\\\": \\\"1\\\",\\n        \\\"dateOfBirth\\\": \\\"1982-01-16\\\",\\n        \\\"name\\\": {\\n          \\\"firstName\\\": YOUR_NAME,\\n          \\\"lastName\\\": YOUR_LASTNAME\\n        },\\n        \\\"gender\\\": \\\"MALE\\\",\\n        \\\"contact\\\": {\\n          \\\"emailAddress\\\": YOUR_EMAIL,\\n          \\\"phones\\\": [\\n            {\\n              \\\"deviceType\\\": \\\"MOBILE\\\",\\n              \\\"countryCallingCode\\\": \\\"33\\\",\\n              \\\"number\\\": \\\"0665735114\\\"\\n            }\\n          ]\\n        },\\n        \\\"documents\\\": [\\n          {\\n            \\\"documentType\\\": \\\"PASSPORT\\\",\\n            \\\"birthPlace\\\": \\\"Madrid\\\",\\n            \\\"issuanceLocation\\\": \\\"Madrid\\\",\\n            \\\"issuanceDate\\\": \\\"2015-04-14\\\",\\n            \\\"number\\\": \\\"00000000\\\",\\n            \\\"expiryDate\\\": \\\"2025-04-14\\\",\\n            \\\"issuanceCountry\\\": \\\"ES\\\",\\n            \\\"validityCountry\\\": \\\"ES\\\",\\n            \\\"nationality\\\": \\\"ES\\\",\\n            \\\"holder\\\": true\\n          }\\n        ]\\n      },\\n      \\n    ],\\n    \\\"remarks\\\": {\\n      \\\"general\\\": [\\n        {\\n          \\\"subType\\\": \\\"GENERAL_MISCELLANEOUS\\\",\\n          \\\"text\\\": \\\"ONLINE BOOKING FROM INCREIBLE VIAJES\\\"\\n        }\\n      ]\\n    },\\n    \\\"ticketingAgreement\\\": {\\n      \\\"option\\\": \\\"DELAY_TO_CANCEL\\\",\\n      \\\"delay\\\": \\\"6D\\\"\\n    },\\n    \\\"contacts\\\": [\\n      {\\n        \\\"addresseeName\\\": {\\n          \\\"firstName\\\": \\\"PABLO\\\",\\n          \\\"lastName\\\": \\\"RODRIGUEZ\\\"\\n        },\\n        \\\"companyName\\\": \\\"INCREIBLE VIAJES\\\",\\n        \\\"purpose\\\": \\\"STANDARD\\\",\\n        \\\"phones\\\": [\\n          {\\n            \\\"deviceType\\\": \\\"LANDLINE\\\",\\n            \\\"countryCallingCode\\\": \\\"34\\\",\\n            \\\"number\\\": \\\"480080071\\\"\\n          },\\n          {\\n            \\\"deviceType\\\": \\\"MOBILE\\\",\\n            \\\"countryCallingCode\\\": \\\"33\\\",\\n            \\\"number\\\": \\\"480080072\\\"\\n          }\\n        ],\\n        \\\"emailAddress\\\": \\\"support@increibleviajes.es\\\",\\n        \\\"address\\\": {\\n          \\\"lines\\\": [\\n            \\\"Calle Prado, 16\\\"\\n          ],\\n          \\\"postalCode\\\": \\\"28014\\\",\\n          \\\"cityName\\\": \\\"Madrid\\\",\\n          \\\"countryCode\\\": \\\"ES\\\"\\n        }\\n      }\\n    ]\\n  }\\n}\\n\")), mdx(\"p\", null, \"this request is pass to a function : \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"async function CreateOrder(requestCreateOrder) {\\n  // Default options are marked with *\\n  const response = await fetch(\\\"https://test.api.amadeus.com/v1/booking/flight-orders\\\", {\\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\\n    mode: 'cors', // no-cors, *cors, same-origin\\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\\n    credentials: 'same-origin', // include, *same-origin, omit\\n    headers: {\\n      'Content-Type': 'application/json',authorization: 'Bearer '+token\\n      // 'Content-Type': 'application/x-www-form-urlencoded',\\n    },\\n    redirect: 'follow', // manual, *follow, error\\n    referrerPolicy: 'no-referrer', // no-referrer, *client\\n    body: JSON.stringify(inputFlightCreateOrder) // body data type must match \\\"Content-Type\\\" header\\n  });\\n  return await response.json(); // parses JSON response into native JavaScript objects\\n}\\n\")), mdx(\"p\", null, \"And called while you received the different input of postman or your front end :\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"app.post('/flightCreateOrder', function(req, res) {\\n  res.json(req.body);\\n// console.log(\\\"request :\\\"+JSON.stringify(req.body))\\n  inputFlightCreateOrder = req.body;\\n  console.log(inputFlightCreateOrder)\\n\\n   // res.send(req.body);\\n  CreateOrder(inputFlightCreateOrder)\\n  .then((data) => {\\n    console.log(data);\\n    cretateOrder=data \\n    res.send(JSON.stringify(cretateOrder));// JSON data parsed by `response.json()` call\\n  }).catch(function(error) {\\n  console.error(error);\\n});\\n    }); \\n\")), mdx(\"p\", null, \"No we serve the result :\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"app.get('/flightcretaeorderget', function(req, res) {\\n  res.send(JSON.stringify(cretateOrder));\\n  console.log(cretateOrder)\\n});\\n\")), mdx(\"p\", null, \"In the repsonse opbject you have a value call reference, here it is you got your flight confirmation number !\"), mdx(\"h2\", {\n    \"id\": \"adding-a-flight-search-field-with-autocomplete-using-the-airport--city-search-api\"\n  }, \"Adding a flight search field with autocomplete using the Airport & City Search API\"), mdx(\"p\", null, \"This part is dedicaded for thos ewho wants to dynamicly load city or airport name in an autocomplete module.\\nWe will add to our app a search engine based on keyword of the search provided by the view.\"), mdx(\"p\", null, \"Here is the function that handle it. Keyword is the input from your front end or postman\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"app.post('/citySearch', function(req, res) {\\n  console.log(req)\\n  keyword = req.body.keyword;\\n  // countryCode =req.body.countryCode;\\n  var urlSend= \\\"&keyword=\\\"+keyword\\n  console.log(keyword);\\n  getCitySearch(urlSend).then((data) => {\\n    console.log(data);\\n    returnSearch=data\\n    res.send(JSON.stringify(returnSearch)); // JSON data parsed by `response.json()` call\\n  }).catch(function(error) {\\n  console.error(error);\\n});\\n  });\\n\")), mdx(\"p\", null, \"then :\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"let citySearch = \\\"https://test.api.amadeus.com/v1/reference-data/locations?\\\"\\n//POST flight search \\nasync function getCitySearch(url) {\\n  // returnSearch =\\\"\\\";\\n  // Default options are marked with *\\n  const response = await fetch(citySearch+\\\"subType=CITY,AIRPORT\\\"+url , {\\n    method: 'GET', // *GET, POST, PUT, DELETE, etc.\\n    mode: 'cors', // no-cors, *cors, same-origin\\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\\n    credentials: 'same-origin', // include, *same-origin, omit\\n    headers: {\\n      // 'Content-Type': 'application/json'   \\n      //'Content-Type': ,\\n      'Content-Type': 'application/x-www-form-urlencoded',authorization: 'Bearer '+token\\n     },\\n    redirect: 'follow', // manual, *follow, error\\n    referrerPolicy: 'no-referrer', // no-referrer, *client\\n    // body: \\n  });\\n  console.log(citySearch)\\n  return await response.json(); // parses JSON response into native JavaScript objects\\n}\\n\")), mdx(\"p\", null, \"And the route to send the answer to the view :\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"\\napp.get('/departureGet', function(req, res) {\\n  res.send(JSON.stringify(returnSearch));\\n  console.log(returnSearch)\\n});\\n\\n\")), mdx(\"h2\", {\n    \"id\": \"conclusion-and-links-to-download-the-source-code\"\n  }, \"Conclusion and links to download the source code.\"), mdx(\"p\", null, \"Then simply it npm run start and play with your api with postman !\"), mdx(\"h2\", {\n    \"id\": \"complete-code\"\n  }, \"Complete code\"), mdx(\"p\", null, \"The complete code is available on github \", mdx(\"a\", {\n    href: \"https://github.com/tvast/backend-node-js-amadeus-search-flight-API\"\n  }, \"complete code\")));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"/nodeJs_amadeus/nodejs_amadeus/","title":"Node JS app for amadeus API","tags":[],"keywords":[],"date":"January 07, 2020"},"previous":{"__typename":"MdxBlogPost","id":"8f087f64-e6cf-50b8-a0f6-fb303b13231b","excerpt":"Today we'll learn how to implement a front end app to interact with the amadeus self service travel API.  Let's first initialize our…","slug":"/vue_js_front_end_amadeus_api/vue_js_front_end_amadeus_api/","title":"Vue JS app for amadeus API","date":"January 07, 2020"},"next":null},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"5b3438d4-0078-5641-ac32-6723f542588d","previousId":"8f087f64-e6cf-50b8-a0f6-fb303b13231b"}}}