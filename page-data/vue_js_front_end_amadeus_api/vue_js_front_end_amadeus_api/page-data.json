{"componentChunkName":"component---node-modules-gatsby-theme-blog-core-src-templates-post-query-js","path":"/vue_js_front_end_amadeus_api/vue_js_front_end_amadeus_api/","webpackCompilationHash":"e4af9912ae0e8b8ef090","result":{"data":{"site":{"siteMetadata":{"title":"A developer journey","social":[{"name":"twitter","url":"https://twitter.com/theophile_vast"},{"name":"github","url":"https://github.com/tvast"}]}},"blogPost":{"__typename":"MdxBlogPost","id":"8f087f64-e6cf-50b8-a0f6-fb303b13231b","excerpt":"Today we'll learn how to implement a front end app to interact with the amadeus self service travel API.  Let's first initialize ourâ€¦","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Vue JS app for amadeus API\",\n  \"date\": \"2020-01-07T00:00:00.000Z\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Today we\\u2019ll learn how to implement a front end app to interact with the amadeus self service travel API. \"), mdx(\"p\", null, \"Let\\u2019s first initialize our environment. We need node js install to run this sample code you\\u201Dll find it here\"), mdx(\"h2\", {\n    \"id\": \"set-up\"\n  }, \"Set up\"), mdx(\"p\", null, \"You need to install vue js cli \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"npm install -g @vue/cli\\n# OR\\nyarn global add @vue/cli\\n\")), mdx(\"p\", null, \"Then create a boillerplate project : \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"vue create awesome-travel-agency\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"cd awesome-travel-agency\\n\")), mdx(\"p\", null, \"Install depedencies\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"npm i\\n\")), mdx(\"p\", null, \"serve the project\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"npm run serve\\n\")), mdx(\"h2\", {\n    \"id\": \"first-component--search-travel\"\n  }, \"First component : search travel\"), mdx(\"p\", null, \"The sample project provide you your first component HelloWorld.vue. CHange the name for the one you like.\\nBTW you\\u2019ll need to read our lasta article about how to implement a node js back end to make this example working. you\\u2019ll find it here\"), mdx(\"p\", null, \"Change the script content for the next one:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"export default {\\n  name: 'Home',\\n  data: () => ({\\n    menuVisible: false,\\n    selectedCountryDeparture: null,\\n    countriesDeparture: [\\n        'MAD',\\n        'PAR',\\n        'SYD',\\n        'BKK',\\n       ],\\n       selectedCountryArrival: null,\\n    countriesArrival: [\\n        'MAD',\\n        'PAR',\\n        'SYD',\\n        'BKK',\\n       ],\\n      localhost: \\\"https://test.api.amadeus.com/v1/reference-data/locations?subType=AIRPORT,CITY&keyword=\\\",\\n      info:{},\\n  info2:{},\\n  info3:{},\\n  token:\\\"\\\",\\n  localhost3: \\\"http://localhost:3000/token\\\",\\n  localhost2: \\\"http://localhost:3000/flight\\\",\\n  selectedDateDeparture :\\\"2020-02-01\\\",\\n  selectedDateArrival : \\\"2020-02-27\\\",\\n  mojsOptions : {\\n            count : 6,\\n            radius: { 15: 100 },\\n            origin: '100% 100%',\\n            degree: 360,\\n            children: {\\n              shape: 'polygon',\\n              fill: ['blue','white'],\\n              isSwirl:true,\\n              swirlSize: 10,\\n              swirlFrequency: 2,\\n              delay: 'stagger(0, 30)'\\n            }\\n          }\\n  }),\\ncreated() {\\n\\n  \\n}, \\n\\nmethods: {\\n\\n  autocompleteCity(){\\n    window.console.log(this.selectedCountryDeparture+\\\" \\\"+this.selectedCountryArrival)\\n  },\\n\\nletsFly() {\\n  this.info2=\\\"\\\";\\n  let bodyDate = \\\"departure=\\\"+\\n  this.selectedDateDeparture + \\n  \\\"&arrival=\\\"+\\n  this.selectedDateArrival+\\n  \\\"&locationDeparture=\\\"+\\n  this.selectedCountryDeparture+\\n  \\\"&locationArrival=\\\"+\\n  this.selectedCountryArrival;\\n  \\n  window.console.log(bodyDate);\\n \\n  async function postUrlEncoded() {\\n  // Default options are marked with *\\n  const response = await fetch(\\\"http://localhost:3000/date?\\\"+bodyDate, {\\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\\n    mode: 'cors', // no-cors, *cors, same-origin\\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\\n    credentials: 'same-origin', // include, *same-origin, omit\\n    headers: {\\n      // 'Content-Type': 'application/json'   \\n      'Content-Type': 'application/x-www-form-urlencoded',\\n     },\\n    redirect: 'follow', // manual, *follow, error\\n    referrerPolicy: 'no-referrer', // no-referrer, *client\\n    body: bodyDate// body data type must match \\\"Content-Type\\\" header\\n  });\\n  return await response.json(); // parses JSON response into native JavaScript objects\\n}\\n\\npostUrlEncoded().then((data) => {\\n    window.console.log(data);\\n    // this.info3=data // JSON data parsed by `response.json()` call\\n  });\\n\\nasync function flightSearch() {\\n  // Default options are marked with *\\n  const response = await fetch(\\\"http://localhost:3000/flightSearch\\\" );\\n  return await response.json(); // parses JSON response into native JavaScript objects\\n}\\nthis.isLoading = true\\nflightSearch()\\n  .then((json) => {\\n   this.info2=json;\\n  this.toggleInfo=true;\\n  // this.isLoading = false // JSON data parsed by `response.json()` call\\n  });\\n},\\n}\\n\\n        \\n\\n}\\n\")), mdx(\"p\", null, \"Change the content of the template tag\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\"\n  }), \"\\n<div>\\n  <!-- form -->\\n  <main class =\\\"content\\\">\\n    <form class=\\\"form\\\">\\n      <div class =\\\"title\\\">\\n        <h2>Book a Flight</h2>\\n        <p>Select locations and dates to get started.</p>\\n      </div>\\n      <div class=\\\"progress\\\">\\n        <p>Step 1 of 3</p>\\n        <div class=\\\"progress-bar\\\">\\n          <div class=\\\"bar-pink\\\">\\n            <p>33%</p>\\n          </div>\\n        </div>\\n      </div>\\n      <div class =\\\"categories\\\">\\n      </div>\\n      <div class=\\\"row1\\\">\\n        <div class=\\\"locations from-location1\\\">\\n         <md-autocomplete @input=\\\"autocompleteCity\\\" v-model=\\\"selectedCountryDeparture\\\" :md-options=\\\"countriesDeparture\\\">\\n          <label>Departure</label>\\n        </md-autocomplete>\\n      </div>\\n      <div class=\\\"locations to-location1\\\">\\n        <md-autocomplete @input=\\\"autocompleteCity\\\" v-model=\\\"selectedCountryArrival\\\" :md-options=\\\"countriesArrival\\\">\\n          <label>Arrival</label>\\n        </md-autocomplete>\\n      </div>\\n    </div>\\n    <div class=\\\"row2\\\">\\n      <div class=\\\"dates depart\\\">\\n        <label class=\\\"depart-date\\\" for=\\\"depart\\\">Departure:</label>\\n        <md-datepicker v-model=\\\"selectedDateDeparture\\\" />\\n      </div>\\n      <div class=\\\"dates return\\\">\\n        <label class=\\\"returning-date\\\" for=\\\"return\\\">Return:</label>\\n        <md-datepicker v-model=\\\"selectedDateArrival\\\" />   \\n      </div>\\n    </div>\\n    <div class=\\\"\\\">\\n      <p v-mojs=\\\"mojsOptions\\\" class=\\\"next\\\" @click=\\\"letsFly()\\\" >Let's Fly!</p>\\n    </div>\\n  </form>\\n</main>\\n<div >\\n  <div class=\\\"row\\\">\\n    <div v-for=\\\"(item,index) in info2\\\" :key=\\\"index\\\" class=\\\"col s4 autoflow\\\">\\n      <div class=\\\"card blue-grey darken-1\\\">\\n        <div class=\\\"card-content white-text\\\">\\n          <template>\\n            <span  v-for=\\\"(foo, index) in item.itineraries\\\" :key=\\\"index\\\" class=\\\"card-title\\\"> \\n\\n                <span v-for=\\\"bar in foo.segments\\\">\\n                    {{bar.departure.iataCode}}--{{bar.arrival.iataCode}}\\n                </span>\\n            </span>\\n          </template>\\n          \\n          <p>Number of seat : {{item.numberOfBookableSeats}}-- Price :{{item.price.grandTotal}}</p>\\n        </div>\\n        <div class=\\\"card-action\\\">\\n  </div>\\n</div>\\n</div>\\n</div>\\n\\n</div>\\n\\n</div>\\n\\n\")), mdx(\"p\", null, \"What we are doing it here ? We need some explanations.\"), mdx(\"h2\", {\n    \"id\": \"first-step\"\n  }, \"First step\"), mdx(\"p\", null, \"Data is our global object where we pass our properties. They are mutable and we initialize them with the desired value. For the instance of the dropdown we give the values of the country code that we want to implement.\"), mdx(\"p\", null, \"Our methods object is a collection of function. To ask the amadeus api we need to agregate our value from the form in url encoded post. So the var bodyDate agregate the v-model propertie that we bind with the form.\"), mdx(\"p\", null, \"We use asynchronous fetch to post our data. Then we call our asynchronous function. Easy peasy we populate our variable with an other async function which is just a get on the answer from the amadus search travel API\"), mdx(\"p\", null, \"We can style our first component now\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-css\"\n  }), \"  .content {\\n  max-width: 65%;\\n  max-height: 100%;\\n  margin: 75px auto;\\n  border-radius: 6px;\\n  background-color: #424242\\n}\\n\\n.form {\\n  text-align: center;\\n}\\n\\n.title {\\n  text-align: center;\\n  padding-top: 10px;\\n}\\n\\n.progress {\\n  width: 80%;\\n  display: inline-block;\\n  text-align: center;\\n}\\n\\n.progress-bar {\\n  background-color: #FEAFEB;\\n  margin-bottom: 20px;\\n  border-radius: 16px;\\n}\\n\\n.bar-pink {\\n  height: 26px;\\n  width: 33%;\\n  background-color: #FF33CE;\\n  color: white;\\n  border-radius: 16px;\\n}\\n\\n.categories {\\n  width: 100%;\\n  display: inline-block;\\n}\\n\\n.button {\\n  background-color: #F3F3F3;\\n  width: 33.3%;\\n  border: none;\\n  color: #7E7E7E;\\n  font-size: 16px;\\n  font-weight: bold;\\n  padding: 15px;\\n}\\n\\nbutton:hover {\\n  background-color: #FF33CE;\\n  color: white;\\n}\\n\\n.Hotels {\\n  margin-left: -4px;\\n  margin-right: -4px;\\n}\\n\\n.row1 {\\n  width: 100%;\\n  margin-top: 30px;\\n  font-size: 18px;\\n}\\n\\n.locations {\\n  display: inline-block;\\n}\\n\\n.from-location2 {\\n  color: #7E7E7E;\\n}\\n\\n.from {\\n  -webkit-appearance: none;\\n  background-color: #F3F3F3;\\n  padding: 8px 20px;\\n  border: none;\\n}\\n\\n.from-location1 {\\n  width: 45%;\\n}\\n\\n.to-location1 {\\n  width: 45%;\\n}\\n\\n.to-location2 {\\n  color: #7E7E7E;\\n}\\n\\n.to {\\n  -webkit-appearance: none;\\n  background-color: #F3F3F3;\\n  padding: 8px 20px;\\n  border: none;\\n}\\n\\n.row2 {\\n  width: 100%;\\n  margin-top: 30px;\\n  font-size: 18px;\\n}\\n\\n.dates {\\n  display: inline-block;\\n  border: none;\\n}\\n\\n.depart {\\n  width: 45%;\\n  color: #7E7E7E;\\n}\\n\\n.departure-date {\\n  border: none;\\n  padding: 8px 8px;\\n  background-color: #F3F3F3;\\n}\\n\\n.return {\\n  width: 45%;\\n  color: #7E7E7E;\\n}\\n\\n.return-date {\\n  border: none;\\n  padding: 8px 8px;\\n  background-color: #F3F3F3;\\n}\\n\\n.next-button {\\n  padding-top: 10px;\\n  padding-bottom: 10px;  \\n}\\n\\n.next {\\n  display: block;\\n  width: 10%;\\n  margin: 20px auto 20px;\\n  padding: 10px 20px;\\n  font-size: 14px;\\n  background-color: #448aff;\\n  color: white;\\n  border: none;\\n  border-radius: 16px; \\n}\\n\\n.next:hover {\\n  background-color: #D52CAC;\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"second-component--search-price\"\n  }, \"Second component : Search price\"), mdx(\"p\", null, \"We keep what we implemented above. ANd we extend it with some few HTML and function\"), mdx(\"p\", null, \"For this other API endpoint we need to add a UI component to select an item from the flight search. A checkbox or a switch will done the job for us. \"), mdx(\"p\", null, \"the function watch to keep an eyes of our selected item\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"\\nwatch:{\\n      selectedTravel(){\\n        // alert('checkbox changed');\\n        return window.console.log(this.selectedTravel);}\\n      },\\n\\n\")), mdx(\"p\", null, \"Implement this in method object :\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"\\ngetFLightPrice () {\\n window.console.log(this.selectedTravel)\\n  \\n var vm=this;\\nfunction isCherries(flight) { \\n  return flight.id === vm.selectedTravel;\\n}\\nthis.searchObject = this.info2.find(isCherries);\\n\\nwindow.console.log(this.searchObject); \\n\\nthis.info3=\\\"\\\";\\n\\nvar request =  {\\\"data\\\": {\\n    \\\"type\\\": \\\"flight-offers-pricing\\\",\\n    \\\"flightOffers\\\": [this.searchObject]}}\\n\\n  async function postSearchPrice() {\\n  // Default options are marked with *\\n  const response = await fetch(\\\"http://localhost:3000/flightprice\\\", {\\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\\n    mode: 'cors', // no-cors, *cors, same-origin\\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\\n    credentials: 'same-origin', // include, *same-origin, omit\\n    headers: {'Content-Type': 'application/json'},\\n    redirect: 'follow', // manual, *follow, error\\n    referrerPolicy: 'no-referrer', // no-referrer, *client\\n    body: JSON.stringify(request)// body data type must match \\\"Content-Type\\\" header\\n  });\\n  return await response.json(); // parses JSON response into native JavaScript objects\\n}\\n\\npostSearchPrice().then((data) => {\\n    window.console.log(data);\\n  if(data){\\n    fligthConfirmationGet()\\n  .then((json) => {\\n   window.console.log(json);\\n  this.info3=json;\\n  // this.isLoading = false // JSON data parsed by `response.json()` call\\n  });}\\n\\n  else{this.info3=\\\"loading\\\"\\n    // this.info3=data // JSON data parsed by `response.json()` call\\n  }\\n  });\\n\\n   async function fligthConfirmationGet() {\\n  // Default options are marked with *\\n  const response = await fetch(\\\"http://localhost:3000/flightPriceget\\\" );\\n  return await response.json(); // parses JSON response into native JavaScript objects\\n}\\nthis.isLoading = true\\n\\n\\n},\\n\\n\")), mdx(\"p\", null, \"Add this element to the item in the HTML\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\"\n  }), \"<md-checkbox @click=\\\"getFLightPrice\\\" v-model=\\\"selectedTravel\\\" :value=\\\"item.id\\\">{{item.id}}</md-checkbox>\\n\")), mdx(\"p\", null, \"And here we are we slect an item from the flight search API and we send it to the backend to confirm the price.\"), mdx(\"h2\", {\n    \"id\": \"third-component--create-order\"\n  }, \"Third component : create order\"), mdx(\"p\", null, \"Now that we got our price confirmation we can create our request to create an order and get the confirmation code of our travel.\"), mdx(\"p\", null, \"We need to trigger a form with the passenger data to post it to the backend and receive our confirmation number \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\"\n  }), \"<form novalidate class=\\\"md-layout\\\" @submit.prevent=\\\"validateUser\\\">\\n      <md-card class=\\\"content form\\\">\\n        <md-card-header>\\n          <div class=\\\"md-title\\\">Users</div>\\n        </md-card-header>\\n\\n        <md-card-content>\\n          <div class=\\\"md-layout md-gutter\\\">\\n            <div class=\\\"md-layout-item md-small-size-100\\\">\\n              <md-field :class=\\\"getValidationClass('firstName')\\\">\\n                <label for=\\\"first-name\\\">First Name</label>\\n                <md-input name=\\\"first-name\\\" id=\\\"first-name\\\" autocomplete=\\\"given-name\\\" v-model=\\\"form.firstName\\\" :disabled=\\\"sending\\\" />\\n                <!-- <span class=\\\"md-error\\\" v-if=\\\"form.firstName.required\\\">The first name is required</span>\\n                <span class=\\\"md-error\\\" v-else-if=\\\"form.firstName.minlength\\\">Invalid first name</span> -->\\n              </md-field>\\n            </div>\\n\\n            <div class=\\\"md-layout-item md-small-size-100\\\">\\n              <md-field :class=\\\"getValidationClass('lastName')\\\">\\n                <label for=\\\"last-name\\\">Last Name</label>\\n                <md-input name=\\\"last-name\\\" id=\\\"last-name\\\" autocomplete=\\\"family-name\\\" v-model=\\\"form.lastName\\\" :disabled=\\\"sending\\\" />\\n         <!--        <span class=\\\"md-error\\\" v-if=\\\"form.lastName.required\\\">The last name is required</span>\\n                <span class=\\\"md-error\\\" v-else-if=\\\"form.lastName.minlength\\\">Invalid last name</span> -->\\n              </md-field>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"md-layout md-gutter\\\">\\n            <div class=\\\"md-layout-item md-small-size-100\\\">\\n              <md-field :class=\\\"getValidationClass('gender')\\\">\\n                <label for=\\\"gender\\\">Gender</label>\\n                <md-select name=\\\"gender\\\" id=\\\"gender\\\" v-model=\\\"form.gender\\\" md-dense :disabled=\\\"sending\\\">\\n                  <md-option></md-option>\\n                  <md-option value=\\\"M\\\">M</md-option>\\n                  <md-option value=\\\"F\\\">F</md-option>\\n                </md-select>\\n                <span class=\\\"md-error\\\">The gender is required</span>\\n              </md-field>\\n            </div>\\n\\n            <div class=\\\"md-layout-item md-small-size-100\\\">\\n              <md-field :class=\\\"getValidationClass('age')\\\">\\n                <label for=\\\"age\\\">Age</label>\\n                <md-input type=\\\"number\\\" id=\\\"age\\\" name=\\\"age\\\" autocomplete=\\\"age\\\" v-model=\\\"form.age\\\" :disabled=\\\"sending\\\" />\\n               <!--  <span class=\\\"md-error\\\" v-if=\\\"form.age.required\\\">The age is required</span>\\n                <span class=\\\"md-error\\\" v-else-if=\\\"form.age.maxlength\\\">Invalid age</span> -->\\n              </md-field>\\n            </div>\\n          </div>\\n\\n          <md-field :class=\\\"getValidationClass('email')\\\">\\n            <label for=\\\"email\\\">Email</label>\\n            <md-input type=\\\"email\\\" name=\\\"email\\\" id=\\\"email\\\" autocomplete=\\\"email\\\" v-model=\\\"form.email\\\" :disabled=\\\"sending\\\" />\\n          <!--   <span class=\\\"md-error\\\" v-if=\\\"form.email.required\\\">The email is required</span>\\n            <span class=\\\"md-error\\\" v-else-if=\\\"form.email.email\\\">Invalid email</span> -->\\n          </md-field>\\n        </md-card-content>\\n\\n        <md-progress-bar md-mode=\\\"indeterminate\\\" v-if=\\\"sending\\\" />\\n\\n        <md-card-actions>\\n          <md-button v-mojs=\\\"mojsOptions\\\" type=\\\"submit\\\" class=\\\"md-primary\\\" :disabled=\\\"sending\\\">Create user</md-button>\\n        </md-card-actions>\\n      </md-card>\\n\\n      <!-- <md-snackbar :md-active.sync=\\\"userSaved\\\">The user {{ lastUser }} was saved with success!</md-snackbar> -->\\n    </form>\\n\")), mdx(\"p\", null, \"Then we need to pass the data to a function (don\\u2019t forget to bind those new v-model values to the data object ).\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"    validateUser () {\\n    //get info from flight\\n     window.console.log(this.selectedTravel)\\n  \\n\\n  var vm=this;\\n  function isCherries(flight) { \\n  return flight.id === vm.selectedTravel;\\n  }\\n  this.searchObject = this.info2.find(isCherries);\\n  window.console.log(this.searchObject);\\n    //get user info\\n\\n    //generate request\\n    var requestCreateOrder={\\n  \\\"data\\\": {\\n    \\\"type\\\": \\\"flight-order\\\",\\n    \\\"flightOffers\\\": [this.searchObject],\\n    \\\"travelers\\\": [\\n      {\\n        \\\"id\\\": \\\"1\\\",\\n        \\\"dateOfBirth\\\": \\\"1982-01-16\\\",\\n        \\\"name\\\": {\\n          \\\"firstName\\\": this.form.firstName,\\n          \\\"lastName\\\": this.form.lastName\\n        },\\n        \\\"gender\\\": \\\"MALE\\\",\\n        \\\"contact\\\": {\\n          \\\"emailAddress\\\": this.form.email ,\\n          \\\"phones\\\": [\\n            {\\n              \\\"deviceType\\\": \\\"MOBILE\\\",\\n              \\\"countryCallingCode\\\": \\\"33\\\",\\n              \\\"number\\\": \\\"0665735114\\\"\\n            }\\n          ]\\n        },\\n        \\\"documents\\\": [\\n          {\\n            \\\"documentType\\\": \\\"PASSPORT\\\",\\n            \\\"birthPlace\\\": \\\"Madrid\\\",\\n            \\\"issuanceLocation\\\": \\\"Madrid\\\",\\n            \\\"issuanceDate\\\": \\\"2015-04-14\\\",\\n            \\\"number\\\": \\\"00000000\\\",\\n            \\\"expiryDate\\\": \\\"2025-04-14\\\",\\n            \\\"issuanceCountry\\\": \\\"ES\\\",\\n            \\\"validityCountry\\\": \\\"ES\\\",\\n            \\\"nationality\\\": \\\"ES\\\",\\n            \\\"holder\\\": true\\n          }\\n        ]\\n      },\\n      \\n    ],\\n    \\\"remarks\\\": {\\n      \\\"general\\\": [\\n        {\\n          \\\"subType\\\": \\\"GENERAL_MISCELLANEOUS\\\",\\n          \\\"text\\\": \\\"ONLINE BOOKING FROM INCREIBLE VIAJES\\\"\\n        }\\n      ]\\n    },\\n    \\\"ticketingAgreement\\\": {\\n      \\\"option\\\": \\\"DELAY_TO_CANCEL\\\",\\n      \\\"delay\\\": \\\"6D\\\"\\n    },\\n    \\\"contacts\\\": [\\n      {\\n        \\\"addresseeName\\\": {\\n          \\\"firstName\\\": \\\"PABLO\\\",\\n          \\\"lastName\\\": \\\"RODRIGUEZ\\\"\\n        },\\n        \\\"companyName\\\": \\\"INCREIBLE VIAJES\\\",\\n        \\\"purpose\\\": \\\"STANDARD\\\",\\n        \\\"phones\\\": [\\n          {\\n            \\\"deviceType\\\": \\\"LANDLINE\\\",\\n            \\\"countryCallingCode\\\": \\\"34\\\",\\n            \\\"number\\\": \\\"480080071\\\"\\n          },\\n          {\\n            \\\"deviceType\\\": \\\"MOBILE\\\",\\n            \\\"countryCallingCode\\\": \\\"33\\\",\\n            \\\"number\\\": \\\"480080072\\\"\\n          }\\n        ],\\n        \\\"emailAddress\\\": \\\"support@increibleviajes.es\\\",\\n        \\\"address\\\": {\\n          \\\"lines\\\": [\\n            \\\"Calle Prado, 16\\\"\\n          ],\\n          \\\"postalCode\\\": \\\"28014\\\",\\n          \\\"cityName\\\": \\\"Madrid\\\",\\n          \\\"countryCode\\\": \\\"ES\\\"\\n        }\\n      }\\n    ]\\n  }\\n}\\n\\nasync function postBody() {\\n  // Default options are marked with *\\n  const response = await fetch(\\\"http://localhost:3000/flightCreateOrder\\\", {\\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\\n    mode: 'cors', // no-cors, *cors, same-origin\\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\\n    credentials: 'same-origin', // include, *same-origin, omit\\n    headers: {'Content-Type': 'application/json'},\\n    redirect: 'follow', // manual, *follow, error\\n    referrerPolicy: 'no-referrer', // no-referrer, *client\\n    body: JSON.stringify(requestCreateOrder)// body data type must match \\\"Content-Type\\\" header\\n  });\\n  return await response.json(); // parses JSON response into native JavaScript objects\\n}\\n\\npostBody().then((data) => {\\n    window.console.log(data);\\n    this.info3=data // JSON data parsed by `response.json()` call\\n  });\\n\\nasync function CreateOrder() {\\n  // Default options are marked with *\\n  const response = await fetch(\\\"http://localhost:3000/flightcretaeorderget\\\" );\\n  return await response.json(); // parses JSON response into native JavaScript objects\\n}\\nCreateOrder()\\n  .then((json) => {\\n     this.info3=json;\\n  this.toggleInfo2=true; // JSON data parsed by `response.json()` call\\n  });\\n},\\n\")), mdx(\"p\", null, \"We fill our data in the form with the same logic than above and here we got our confirmation number in the following curly bracket binding :\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\"\n  }), \"  <template v-if=\\\"toggleInfo2\\\">\\n          <div v-for=\\\"item in info3.data.associatedRecords\\\">\\n            <h1 v-mojs=\\\"mojsOptions\\\">{{item.reference}}</h1>\\n          </div>\\n        </template>\\n\")), mdx(\"p\", null, \"That\\u2019s it enjoy this code repo and have fun playing with the amadeus self service travel API!\"));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"/vue_js_front_end_amadeus_api/vue_js_front_end_amadeus_api/","title":"Vue JS app for amadeus API","tags":[],"keywords":[],"date":"January 07, 2020"},"previous":{"__typename":"MdxBlogPost","id":"80294a46-0944-5e96-b279-f001d4d50f05","excerpt":"Amadeus I recently accept a job offer for working in  Amadeus . More tutorrials will comee about how use the Amadeus API for your travelâ€¦","slug":"/moving_to_amadeus/moving_to_Amadeus/","title":"A new challenge","date":"December 12, 2019"},"next":{"__typename":"MdxBlogPost","id":"5b3438d4-0078-5641-ac32-6723f542588d","excerpt":"NodeJS app for working with amadeus app Hello folks. Today we'll learn how to start your proof of concept for a disruptive travel agencyâ€¦","slug":"/nodeJs_amadeus/nodejs_amadeus/","title":"Node JS app for amadeus API","date":"January 07, 2020"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"8f087f64-e6cf-50b8-a0f6-fb303b13231b","previousId":"80294a46-0944-5e96-b279-f001d4d50f05","nextId":"5b3438d4-0078-5641-ac32-6723f542588d"}}}